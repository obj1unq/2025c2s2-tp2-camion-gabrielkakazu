import camion.*
import cosas.*

describe "el camión" {

	test "carga y descarga" {
		assert.that(camion.estaVacio())
		camion.cargar(bumblebee)
		assert.that(camion.tieneCargado(bumblebee))
		camion.cargar(knightRider)
		assert.that(camion.tiene(#{bumblebee, knightRider}))		
		camion.descargar(bumblebee)
		assert.that(camion.tieneCargado(knightRider))
		assert.throwsException({camion.cargar(knightRider)})
		assert.throwsException({camion.descargar(bumblebee)})
	}

	test "todo peso par" {
        camion.cargar(bumblebee)
        arenaAGranel.peso(50)
        camion.cargar(arenaAGranel)
        assert.that(camion.soloCargaPar())
        arenaAGranel.peso(51)
        assert.notThat(camion.soloCargaPar())
		}


	test "Hay alguno que pesa"{
	    camion.cargar(bumblebee)
       	arenaAGranel.peso(50)
	    camion.cargar(arenaAGranel)
        assert.that(camion.hayAlgoQuePesa(50))
        assert.that(camion.hayAlgoQuePesa(800))
        assert.notThat(camion.hayAlgoQuePesa(500))

        }

    test "Peso y exceso de peso" {
        camion.cargar(bumblebee)
        paqueteLadrillos.cantidad(300)
        camion.cargar(paqueteLadrillos)
        assert.equals(2400, camion.pesoTotal())
        assert.notThat(camion.excedidoPeso())
        paqueteLadrillos.cantidad(400)
        assert.equals(2600, camion.pesoTotal())
        assert.that(camion.excedidoPeso())
    }

    test "El de nivel de peligrosidad" {
        bumblebee.transformar()
        assert.that(bumblebee.transformadoAuto())
        camion.cargar(bumblebee)
        bateriaAntiAerea.conMisiles(false)
        camion.cargar(bateriaAntiAerea)
        camion.cargar(residuosRadiactivos)

        assert.equals(bateriaAntiAerea, camion.findAlgoConPeligrosidad(0))
        assert.equals(bumblebee, camion.findAlgoConPeligrosidad(15))
        assert.equals(residuosRadiactivos, camion.findAlgoConPeligrosidad(200))
        assert.throwsException({camion.findAlgoConPeligrosidad(30)})
        bumblebee.transformar()
        assert.notThat(bumblebee.transformadoAuto())
        assert.equals(bumblebee, camion.findAlgoConPeligrosidad(30))
        bateriaAntiAerea.conMisiles(true)
        assert.equals(bateriaAntiAerea, camion.findAlgoConPeligrosidad(100))
    }
test "cosas peligrosas" {
    // setting
    camion.cargar(knightRider)
    camion.cargar(bateriaAntiAerea)
    bateriaAntiAerea.conMisiles(true)

    // Test: cosas más peligrosas  nivel de peligrosidad 15
    assert.equals(#{bateriaAntiAerea}, 
        camion.cosasMasPeligrosasQue(15)
    )
    
    // Test: cosas más peligrosas que Bumblebee
    assert.equals(#{bateriaAntiAerea}, 
        camion.cosasMasPeligrosasQueLaCosa(bumblebee)
    )

    // Test: cosas más peligrosas que el nivel 2
    bateriaAntiAerea.conMisiles(true)  // Desactivar misiles
    assert.equals(#{knightRider, bateriaAntiAerea}, 
        camion.cosasMasPeligrosasQue(2)
    )
    
    // Test: cosas más peligrosas que el paquete de ladrillos
    assert.equals(#{knightRider, bateriaAntiAerea}, 
        camion.cosasMasPeligrosasQueLaCosa(paqueteLadrillos)
    )

    // Test: cosas más peligrosas que 200 (no hay)
    assert.that(
        camion.cosasMasPeligrosasQue(200).isEmpty()
    )

    // Test: cosas más peligrosas que los residuos radiactivos (no hay)
    assert.that(
        camion.cosasPeligrosasQue({cosa => cosa.nivelPeligrosidad() > residuosRadiactivos.nivelPeligrosidad()}).isEmpty()
    )
}
/*
    test "cosas peligrosas" {
        //setting
        camion.cargar(knightRider)
        camion.cargar(bateriaAntiAerea)
        bateriaAntiAerea.conMisiles(true)

        assert.equals(#{bateriaAntiAerea}, 
            camion.cosasPeligrosasQue({cosa.nivelPeligrosidad() == 15}))
        assert.equals(#{bateriaAntiAerea}, 
            camion.cosasPeligrosasQue({cosa.nivelPeligrosidad() > bumblebee.nivelPeligrosidad() }))
        bateriaAntiAerea.conMisiles(false)
        assert.equals(#{knightRider, bateriaAntiAerea}, 
            camion.cosasPeligrosasQue({cosa.nivelPeligrosidad() > 2}) 
        )
        assert.equals({knightRider, bateriaAntiAerea}, 
            camion.cosasPeligrosasQue({cosa.nivelPeligrosidad() > paqueteLadrillos.nivelPeligrosidad() })
        )
        assert.that(
             camion.cosasPeligrosasQue({cosa.nivelPeligrosidad() > 200}).isEmpty()
        )
        assert.that(
             camion.cosasPeligrosasQue({cosa.nivelPeligrosidad() > residuosRadiactivos.nivelPeligrosidad()}).isEmpty()
        )
    }*/
}

	